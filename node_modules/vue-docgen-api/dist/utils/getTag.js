"use strict";Object.defineProperty(exports, "__esModule", { value: true });exports.default = getTag;var _variables = require("./variables");

function isExistInTagList(docPart, tagName) {
  return docPart['tags'].some(function (tagObj) {
    return tagObj['title'] === tagName;
  });
}

function generateTag(title, description, type) {
  var obj = { title: title, description: description };
  if (typeof type !== 'undefined') {
    obj['type'] = type;
  }
  return obj;
}

function getReturns(tagDoc) {
  return tagDoc.map(function (param) {
    var ret = {
      title: 'returns',
      description: param.description || _variables.EMPTY };

    if (param.type && param.type.names) {
      ret['type'] = {
        type: 'NameExpression',
        name: param.type.names.join('|') };

    }
    return ret;
  });
}

function getParams(tagDoc) {
  return tagDoc.map(function (param) {
    var ret = {
      title: 'param',
      description: param.description || _variables.EMPTY,
      name: param.name || _variables.EMPTY };

    if (param.type && param.type.names) {
      ret['type'] = {
        type: 'NameExpression',
        name: param.type.names.join('|') };

    }
    return ret;
  });
}

function getTag(tagName, docPart) {
  var tagDoc = docPart[tagName];
  if (tagDoc) {
    if (typeof tagDoc === 'string' || typeof tagDoc === 'boolean') {
      return [generateTag(tagName, tagDoc)];
    } else if (Array.isArray(tagDoc)) {
      if (tagName === 'params') {
        return getParams(tagDoc);
      } else if (tagName === 'returns') {
        return getReturns(tagDoc);
      } else {
        return tagDoc.map(function (description) {
          return generateTag(tagName, description);
        });
      }
    }
    return false;
  } else if (docPart['tags'] && isExistInTagList(docPart, tagName)) {
    return docPart['tags'].
    filter(function (tagObj) {
      return tagObj['title'] === tagName;
    }).
    map(function (tagObj) {
      return generateTag(tagName, tagObj['text']);
    });
  }
  return false;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy91dGlscy9nZXRUYWcuanMiXSwibmFtZXMiOlsiaXNFeGlzdEluVGFnTGlzdCIsImRvY1BhcnQiLCJ0YWdOYW1lIiwic29tZSIsInRhZ09iaiIsImdlbmVyYXRlVGFnIiwidGl0bGUiLCJkZXNjcmlwdGlvbiIsInR5cGUiLCJvYmoiLCJnZXRSZXR1cm5zIiwidGFnRG9jIiwibWFwIiwicGFyYW0iLCJyZXQiLCJFTVBUWSIsIm5hbWVzIiwibmFtZSIsImpvaW4iLCJnZXRQYXJhbXMiLCJnZXRUYWciLCJBcnJheSIsImlzQXJyYXkiLCJmaWx0ZXIiXSwibWFwcGluZ3MiOiJvR0FBQTs7QUFFQSxTQUFTQSxnQkFBVCxDQUEwQkMsT0FBMUIsRUFBbUNDLE9BQW5DLEVBQTRDO0FBQzFDLFNBQU9ELE9BQU8sQ0FBQyxNQUFELENBQVAsQ0FBZ0JFLElBQWhCLENBQXFCLFVBQUFDLE1BQU0sRUFBSTtBQUNwQyxXQUFPQSxNQUFNLENBQUMsT0FBRCxDQUFOLEtBQW9CRixPQUEzQjtBQUNELEdBRk0sQ0FBUDtBQUdEOztBQUVELFNBQVNHLFdBQVQsQ0FBcUJDLEtBQXJCLEVBQTRCQyxXQUE1QixFQUF5Q0MsSUFBekMsRUFBK0M7QUFDN0MsTUFBSUMsR0FBRyxHQUFHLEVBQUVILEtBQUssRUFBTEEsS0FBRixFQUFTQyxXQUFXLEVBQVhBLFdBQVQsRUFBVjtBQUNBLE1BQUksT0FBT0MsSUFBUCxLQUFnQixXQUFwQixFQUFpQztBQUMvQkMsSUFBQUEsR0FBRyxDQUFDLE1BQUQsQ0FBSCxHQUFjRCxJQUFkO0FBQ0Q7QUFDRCxTQUFPQyxHQUFQO0FBQ0Q7O0FBRUQsU0FBU0MsVUFBVCxDQUFvQkMsTUFBcEIsRUFBNEI7QUFDMUIsU0FBT0EsTUFBTSxDQUFDQyxHQUFQLENBQVcsVUFBQUMsS0FBSyxFQUFJO0FBQ3pCLFFBQUlDLEdBQUcsR0FBRztBQUNSUixNQUFBQSxLQUFLLEVBQUUsU0FEQztBQUVSQyxNQUFBQSxXQUFXLEVBQUVNLEtBQUssQ0FBQ04sV0FB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aXNFeGlzdEluVGFnTGlzdChkb2NQYXJ0LCB0YWdOYW1lKSB7XG4gIHJldHVybiBkb2NQYXJ0Wyd0YWdzJ10uc29tZSh0YWdPYmogPT4ge1xuICAgIHJldHVybiB0YWdPYmpbJ3RpdGxlJ10gPT09IHRhZ05hbWVcbiAgfSlcbn1cblxuZnVuY3Rpb24gZ2VuZXJhdGVUYWcodGl0bGUsIGRlc2NyaXB0aW9uLCB0eXBlKSB7XG4gIGxldCBvYmogPSB7IHRpdGxlLCBkZXNjcmlwdGlvbiB9XG4gIGlmICh0eXBlb2YgdHlwZSAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICBvYmpbJ3R5cGUnXSA9IHR5cGVcbiAgfVxuICByZXR1cm4gb2JqXG59XG5cbmZ1bmN0aW9uIGdldFJldHVybnModGFnRG9jKSB7XG4gIHJldHVybiB0YWdEb2MubWFwKHBhcmFtID0+IHtcbiAgICBsZXQgcmV0ID0ge1xuICAgICAgdGl0bGU6ICdyZXR1cm5zJyxcbiAgICAgIGRlc2NyaXB0aW9uOiBwYXJhbS5kZXNjcmlwdGlvbiB8fCBFTVBUWSxcbiAgICB9XG4gICAgaWYgKHBhcmFtLnR5cGUgJiYgcGFyYW0udHlwZS5uYW1lcykge1xuICAgICAgcmV0Wyd0eXBlJ10gPSB7XG4gICAgICAgIHR5cGU6ICdOYW1lRXhwcmVzc2lvbicsXG4gICAgICAgIG5hbWU6IHBhcmFtLnR5cGUubmFtZXMuam9pbignfCcpLFxuICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gcmV0XG4gIH0pXG59XG5cbmZ1bmN0aW9uIGdldFBhcmFtcyh0YWdEb2MpIHtcbiAgcmV0dXJuIHRhZ0RvYy5tYXAocGFyYW0gPT4ge1xuICAgIGxldCByZXQgPSB7XG4gICAgICB0aXRsZTogJ3BhcmFtJyxcbiAgICAgIGRlc2NyaXB0aW9uOiBwYXJhbS5kZXNjcmlwdGlvbiB8fCBFTVBUWSxcbiAgICAgIG5hbWU6IHBhcmFtLm5hbWUgfHwgRU1QVFksXG4gICAgfVxuICAgIGlmIChwYXJhbS50eXBlICYmIHBhcmFtLnR5cGUubmFtZXMpIHtcbiAgICAgIHJldFsndHlwZSddID0ge1xuICAgICAgICB0eXBlOiAnTmFtZUV4cHJlc3Npb24nLFxuICAgICAgICBuYW1lOiBwYXJhbS50eXBlLm5hbWVzLmpvaW4oJ3wnKSxcbiAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHJldFxuICB9KVxufVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBnZXRUYWcodGFnTmFtZSwgZG9jUGFydCkge1xuICBjb25zdCB0YWdEb2MgPSBkb2NQYXJ0W3RhZ05hbWVdXG4gIGlmICh0YWdEb2MpIHtcbiAgICBpZiAodHlwZW9mIHRhZ0RvYyA9PT0gJ3N0cmluZycgfHwgdHlwZW9mIHRhZ0RvYyA9PT0gJ2Jvb2xlYW4nKSB7XG4gICAgICByZXR1cm4gW2dlbmVyYXRlVGFnKHRhZ05hbWUsIHRhZ0RvYyldXG4gICAgfSBlbHNlIGlmIChBcnJheS5pc0FycmF5KHRhZ0RvYykpIHtcbiAgICAgIGlmICh0YWdOYW1lID09PSAncGFyYW1zJykge1xuICAgICAgICByZXR1cm4gZ2V0UGFyYW1zKHRhZ0RvYylcbiAgICAgIH0gZWxzZSBpZiAodGFnTmFtZSA9PT0gJ3JldHVybnMnKSB7XG4gICAgICAgIHJldHVybiBnZXRSZXR1cm5zKHRhZ0RvYylcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHJldHVybiB0YWdEb2MubWFwKGRlc2NyaXB0aW9uID0+IHtcbiAgICAgICAgICByZXR1cm4gZ2VuZXJhdGVUYWcodGFnTmFtZSwgZGVzY3JpcHRpb24pXG4gICAgICAgIH0pXG4gICAgICB9XG4gICAgfVxuICAgIHJldHVybiBmYWxzZVxuICB9IGVsc2UgaWYgKGRvY1BhcnRbJ3RhZ3MnXSAmJiBpc0V4aXN0SW5UYWdMaXN0KGRvY1BhcnQsIHRhZ05hbWUpKSB7XG4gICAgcmV0dXJuIGRvY1BhcnRbJ3RhZ3MnXVxuICAgICAgLmZpbHRlcih0YWdPYmogPT4ge1xuICAgICAgICByZXR1cm4gdGFnT2JqWyd0aXRsZSddID09PSB0YWdOYW1lXG4gICAgICB9KVxuICAgICAgLm1hcCh0YWdPYmogPT4ge1xuICAgICAgICByZXR1cm4gZ2VuZXJhdGVUYWcodGFnTmFtZSwgdGFnT2JqWyd0ZXh0J10pXG4gICAgICB9KVxuICB9XG4gIHJldHVybiBmYWxzZVxufVxuIl19